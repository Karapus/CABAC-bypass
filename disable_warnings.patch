diff --git a/CMakeLists.txt b/CMakeLists.txt
index 0e52aa41..bf7577ec 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -64,14 +64,14 @@ if( OpenMP_FOUND )
 endif()
 
 # Enable warnings for some generators and toolsets.
-# bb_enable_warnings( gcc warnings-as-errors -Wno-sign-compare )
+# bb_enable_warnings( gcc -Wno-sign-compare )
 # bb_enable_warnings( gcc -Wno-unused-variable )
-# bb_enable_warnings( gcc-4.8 warnings-as-errors -Wno-unused-variable )
+# bb_enable_warnings( gcc-4.8 -Wno-unused-variable )
 # for gcc 8.2:
-bb_enable_warnings( gcc warnings-as-errors -Wno-sign-compare -Wno-class-memaccess)
+bb_enable_warnings( gcc -Wno-sign-compare -Wno-class-memaccess)
 
 if( XCODE )
-  bb_enable_warnings( clang warnings-as-errors
+  bb_enable_warnings( clang
                             -Wno-deprecated-declarations
                             -Wno-unknown-attributes
                             -Wno-deprecated-register
@@ -79,17 +79,17 @@ if( XCODE )
                             -Wno-absolute-value
                             -Wno-unused-const-variable )
 else()
-  bb_enable_warnings( clang warnings-as-errors
+  bb_enable_warnings( clang
                             -Wno-unknown-attributes
                             -Wno-deprecated-register
                             -Wno-pessimizing-move
                             -Wno-absolute-value
                             -Wno-unused-const-variable )
 endif()
-#bb_enable_warnings( clang warnings-as-errors )
+#bb_enable_warnings( clang )
 
 # enable warnings
-bb_enable_warnings( msvc warnings-as-errors "/wd4996" )
+bb_enable_warnings( msvc "/wd4996" )
 
 # enable sse4.1 build for all source files for gcc and clang
 if( UNIX OR MINGW )
